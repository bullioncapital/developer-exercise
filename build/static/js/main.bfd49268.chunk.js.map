{"version":3,"sources":["components/Button.tsx","components/Counter.tsx","api/RestServices.ts","components/ListComponent.tsx","components/Main.tsx","index.tsx"],"names":["Button","className","onClick","this","props","onClickCallBack","bind","buttonTitle","React","Component","Counter","count","RestServices","_config","config","method","path","body","Promise","resolve","reject","fetch","restConfig","hostName","hostPort","mode","cache","headers","redirect","referrer","then","res","status","json","jsonResponse","err","value","reqBody","_createRequest","restApi","paths","modifyCount","JSON","stringify","catch","getCount","ListComponent","returnArray","listItems","forEach","item","push","toString","timeStamp","_createList","Main","_services","_increaseDecreaseNum","state","dataList","setState","data","_addCountCallback","_subtractCountCallback","length","currentCount","Number","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"imBASaA,EAAb,uKAEQ,OACI,yBAAKC,UAAU,yBACX,4BAAQA,UAAU,kBAAkBC,QAASC,KAAKC,MAAMC,gBAAgBC,KAAKH,OACzE,8BAAOA,KAAKC,MAAMG,mBALtC,GAA4BC,IAAMC,WCDrBC,EAAb,uKAEQ,OACI,yBAAKT,UAAU,0BACX,+CAAqBE,KAAKC,MAAMO,YAJhD,GAA6BH,IAAMC,W,kBCHtBG,EAAb,WAEI,aAAe,yBADPC,aACM,EACVV,KAAKU,QAAUC,EAHvB,2DAM2BC,EAAgBC,EAAcC,GAA2B,IAAD,OAC3E,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,MAAM,UAAD,OAAW,EAAKR,QAAQS,WAAWC,SAAnC,YAA+C,EAAKV,QAAQS,WAAWE,SAAvE,YAAmFR,GAAQ,CAC5FD,OAAQA,EACRU,KAAM,OACNC,MAAO,WACPC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,SAAU,cACVZ,KAAMA,IACPa,MAAK,SAAAC,GACAA,GAAsB,MAAfA,EAAIC,OACXD,EAAIE,OAAOH,MAAK,SAAAI,GACZf,EAAQe,MAGZd,EAAOW,MAEZ,SAAAI,GACCf,EAAOe,WA3BvB,kCAgCuBC,GAA+C,IAAD,OAC7D,OAAO,IAAIlB,SAAQ,SAACC,EAASC,GACzB,IAAIiB,EAAU,CACVD,MAAOA,GAEX,EAAKE,eAAe,OAAQ,EAAKzB,QAAQ0B,QAAQC,MAAMC,YAAaC,KAAKC,UAAUN,IAAUP,MAAK,SAAAC,GAC9FZ,EAAQY,MACTa,OAAM,SAAAT,GACLf,EAAOe,WAxCvB,iCA6CsD,IAAD,OAC7C,OAAO,IAAIjB,SAAQ,SAACC,EAASC,GACzB,EAAKkB,eAAe,MAAO,EAAKzB,QAAQ0B,QAAQC,MAAMK,UAAUf,MAAK,SAAAC,GACjEZ,EAA+BY,MAChCa,OAAM,SAAAT,GACLf,EAAOe,aAlDvB,KCIaW,EAAb,4KAEQ,IAAIC,EAAkC,GAOtC,OANA5C,KAAKC,MAAM4C,UAAUC,SAAQ,SAAAC,GACzBH,EAAYI,KAAK,wBAAIlD,UAAU,mBAC3B,yCAAeiD,EAAKvC,MAAMyC,WAA1B,eAAkDF,EAAKG,gBAIxDN,IATf,+BAaQ,OACI,yBAAK9C,UAAU,uBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,cACX,wBAAIA,UAAU,cACTE,KAAKmD,sBAlBlC,GAAmC9C,IAAMC,WCQ5B8C,G,YAAb,kDAGI,WAAYnD,GAAoB,IAAD,8BAC3B,cAAMA,IAHFoD,UAA0B,IAAI5C,EAEP,EADvB6C,qBAA+B,EAGnC,EAAKC,MAAQ,CAAE/C,MAAO,KAAMgD,SAAU,IAFX,EAHnC,gEAQyB,IAAD,OAChBxD,KAAKqD,UAAUX,WAAWf,MAAK,SAAAC,GAC3B,EAAK6B,SAAS,CAAEjD,MAAOoB,EAAI8B,KAAK,GAAGlD,MAAOgD,SAAU5B,EAAI8B,UACzDjB,OAAM,SAAAT,GACL,MAAOA,OAZnB,+BAiBQ,OACI,yBAAKlC,UAAU,YACX,yBAAKA,UAAU,iBACY,OAArBE,KAAKuD,MAAM/C,MACb,kBAAC,EAAD,CAASA,MAAOR,KAAKuD,MAAM/C,MAAMyC,aAAiB,kDAEtD,yBAAKnD,UAAU,kBACX,yBAAKA,UAAU,gBACX,kBAAC,EAAD,CAAQM,YAAa,MAAOF,gBAAiBF,KAAK2D,kBAAkBxD,KAAKH,UAGjF,yBAAKF,UAAU,uBACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CAAQM,YAAa,WAAYF,gBAAiBF,KAAK4D,uBAAuBzD,KAAKH,UAG3F,yBAAKF,UAAU,iBAAgB,wBAAIA,UAAU,eAAd,YAC/B,yBAAKA,UAAU,4BACbE,KAAKuD,MAAMC,SAASK,OAAS,EAC5B,kBAAC,EAAD,CAAehB,UAAW7C,KAAKuD,MAAMC,WAAc,qDApCtE,0CA0CiC,IAAD,OACpBM,EAAeC,OAAO/D,KAAKuD,MAAMC,SAAS,GAAGhD,OACjDsD,GAAgB9D,KAAKsD,qBACrBtD,KAAKqD,UAAUf,YAAYwB,GAAcnC,MAAK,SAAAC,GAC1CoC,QAAQC,IAAIrC,GACZ,EAAK6B,SAAS,CAAEjD,MAAOoB,EAAI8B,KAAK,GAAGlD,MAAOgD,SAAU5B,EAAI8B,UACzDjB,OAAM,SAAAT,GACLgC,QAAQC,IAAIjC,QAjDxB,+CAqDsC,IAAD,OACzB8B,EAAeC,OAAO/D,KAAKuD,MAAMC,SAAS,GAAGhD,OACjDsD,GAAgB9D,KAAKsD,qBACrBtD,KAAKqD,UAAUf,YAAYwB,GAAcnC,MAAK,SAAAC,GAC1CoC,QAAQC,IAAIrC,GACZ,EAAK6B,SAAS,CAAEjD,MAAOoB,EAAI8B,KAAK,GAAGlD,MAAOgD,SAAU5B,EAAI8B,UACzDjB,OAAM,SAAAT,GACLgC,QAAQC,IAAIjC,UA5DxB,GAA0B3B,IAAMC,YCZhC4D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.bfd49268.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface IButtonProps {\r\n    onClickCallBack: () => void;\r\n    buttonTitle: string;\r\n}\r\n\r\ninterface IButtonState {}\r\n\r\nexport class Button extends React.Component<IButtonProps, IButtonState> {\r\n    render() {\r\n        return (\r\n            <div className='react-ButtonComponent'>\r\n                <button className=\"btn btn-primary\" onClick={this.props.onClickCallBack.bind(this)}>\r\n                    <span>{this.props.buttonTitle}</span>\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\ninterface ICounterState {}\r\n\r\ninterface ICounterProps {\r\n    count: string\r\n}\r\n\r\nexport class Counter extends React.Component<ICounterProps, ICounterState> {\r\n    render() {\r\n        return (\r\n            <div className='react-CounterComponent'>\r\n                <div>Current count: {this.props.count}</div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as config from '../server/config.json';\r\nimport { IServerConfig } from '../types/ServerConfig';\r\nimport { IRequest } from '../types/Api';\r\nimport { IGetCountQueryResult } from './../server/Queries';\r\n\r\nexport class RestServices {\r\n    private _config: IServerConfig;\r\n    constructor() {\r\n        this._config = config as IServerConfig;\r\n    }\r\n\r\n    private _createRequest(method: string, path: string, body?: any): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`http://${this._config.restConfig.hostName}:${this._config.restConfig.hostPort}/${path}`, {\r\n                method: method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                redirect: 'follow',\r\n                referrer: 'no-referrer',\r\n                body: body,\r\n            }).then(res => {\r\n                if (res && res.status === 200) {\r\n                    res.json().then(jsonResponse => {\r\n                        resolve(jsonResponse);\r\n                    });\r\n                } else {\r\n                    reject(res);\r\n                }\r\n            }, err => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    public modifyCount(value: number): Promise<IGetCountQueryResult> {\r\n        return new Promise((resolve, reject) => {\r\n            let reqBody = {\r\n                value: value\r\n            } as IRequest;\r\n            this._createRequest('POST', this._config.restApi.paths.modifyCount, JSON.stringify(reqBody)).then(res => {\r\n                resolve(res as IGetCountQueryResult);\r\n            }).catch(err => {\r\n                reject(err as IGetCountQueryResult);\r\n            })\r\n        });\r\n    }\r\n\r\n    public getCount(): Promise<IGetCountQueryResult> {\r\n        return new Promise((resolve, reject) => {\r\n            this._createRequest('GET', this._config.restApi.paths.getCount).then(res => {\r\n                resolve(<IGetCountQueryResult>(res));\r\n            }).catch(err => {\r\n                reject(err as IGetCountQueryResult);\r\n            })\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport { ICountDataRes } from '../server/Queries';\r\n\r\ninterface IListComponentProps {\r\n    listItems: Array<ICountDataRes>\r\n}\r\n\r\ninterface IListComponentState { }\r\n\r\nexport class ListComponent extends React.Component<IListComponentProps, IListComponentState> {\r\n    private _createList() {\r\n        let returnArray: Array<JSX.Element> = [];\r\n        this.props.listItems.forEach(item => {\r\n            returnArray.push(<li className=\"list-group-item\">\r\n                <label>Count: {item.count.toString()} Timestamp: {item.timeStamp}</label>\r\n            </li>)\r\n        });\r\n        \r\n        return returnArray;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='react-ListComponent'>\r\n                <div className=\"panel panel-primary\">\r\n                    <div className=\"panel-body\">\r\n                        <ul className=\"list-group\">\r\n                            {this._createList()}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport { Button } from './Button';\nimport { Counter } from './Counter';\nimport { ICountDataRes } from '../server/Queries';\nimport { RestServices } from '../api/RestServices';\nimport { ListComponent } from './ListComponent';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/main.css';\n\ninterface IMainState {\n    count: number;\n    dataList: Array<ICountDataRes>;\n}\n\ninterface IMainProps {\n}\n\nexport class Main extends React.Component<IMainProps, IMainState> {\n    private _services: RestServices = new RestServices();\n    private _increaseDecreaseNum: number = 5;\n    constructor(props: IMainProps) {\n        super(props);\n        this.state = { count: null, dataList: [] };\n    }\n\n    componentDidMount() {\n        this._services.getCount().then(res => {\n            this.setState({ count: res.data[0].count, dataList: res.data });\n        }).catch(err => {\n            throw (err);\n        });\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div className=\"app-Main\">\n                <div className='react-Counter'>\n                    {(this.state.count !== null) ?\n                    <Counter count={this.state.count.toString()} /> : <div>Waiting for data</div>}\n                </div>\n                <div className=\"react-AddGroup\">\n                    <div className='react-AddBtn'>\n                        <Button buttonTitle={'Add'} onClickCallBack={this._addCountCallback.bind(this)} />\n                    </div>\n                </div>\n                <div className=\"react-SubtractGroup\">\n                    <div className='react-SubtractGroup'>\n                        <Button buttonTitle={'Subtract'} onClickCallBack={this._subtractCountCallback.bind(this)} />\n                    </div>\n                </div>\n                <div className=\"panel-heading\"><h3 className=\"panel-title\">History</h3></div>\n                <div className='react-TransactionHistory'>\n                {(this.state.dataList.length > 0) ?\n                   <ListComponent listItems={this.state.dataList}/> : <div>Waiting for data</div>}\n                </div>\n            </div>\n        );\n    }\n\n    private _addCountCallback() {\n        let currentCount = Number(this.state.dataList[0].count);\n        currentCount += this._increaseDecreaseNum;\n        this._services.modifyCount(currentCount).then(res => {\n            console.log(res);\n            this.setState({ count: res.data[0].count, dataList: res.data });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    private _subtractCountCallback() {\n        let currentCount = Number(this.state.dataList[0].count);\n        currentCount -= this._increaseDecreaseNum;\n        this._services.modifyCount(currentCount).then(res => {\n            console.log(res);\n            this.setState({ count: res.data[0].count, dataList: res.data });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Main } from './components/Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}